import asyncio
import random
from telethon import TelegramClient, events
from auth import api_id, api_hash, phone_number
from config import source_chat_ids, target_chat_ids, delay_range

client = TelegramClient('session', api_id, api_hash)


async def list_chats():
    await client.start(phone_number)
    dialogs = await client.get_dialogs()
    output_lines = []

    for dialog in dialogs:
        entity = dialog.entity
        name = getattr(entity, 'title', None) or getattr(entity, 'first_name', 'Unknown')
        chat_id = entity.id

        if hasattr(entity, 'megagroup') and entity.megagroup:
            chat_type = '–°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞'
        elif hasattr(entity, 'broadcast') and entity.broadcast:
            chat_type = '–ö–∞–Ω–∞–ª'
        elif entity.id > 0:
            chat_type = '–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
        else:
            chat_type = '–ì—Ä—É–ø–ø–∞/–î—Ä—É–≥–æ–µ'

        output_lines.append(f"{name} ‚Äî ID: {chat_id} ‚Äî –¢–∏–ø: {chat_type}")

    with open("chat_list.txt", "w", encoding="utf-8") as f:
        f.write("\n".join(output_lines))

    print("‚úÖ –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª chat_list.txt")


async def forward_messages():
    await client.start(phone_number)

    @client.on(events.NewMessage(chats=source_chat_ids))
    async def handler(event):
        message = event.message

        for chat_id in target_chat_ids:
            try:
                await asyncio.sleep(random.uniform(*delay_range))
                await client.send_message(chat_id, message)
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {chat_id}")
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤ {chat_id}: {e}")

    print("üì° –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await client.run_until_disconnected()


def main():
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("2. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –≤ chat_list.txt –∏ –≤—ã–π—Ç–∏")
    choice = input("–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2: ").strip()

    with client:
        if choice == '1':
            client.loop.run_until_complete(forward_messages())
        elif choice == '2':
            client.loop.run_until_complete(list_chats())
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")


if __name__ == '__main__':
    main()
